name: deploy

permissions:
  id-token: write  # required for requesting the JWT
  contents: read  # required for actions/checkout

on:
  workflow_dispatch:
    inputs:
      deployment_environment:
        description: 'environment'
        required: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: "${{ github.event.inputs.deployment_environment }}"
    
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up node
      uses: actions/setup-node@v2
      with:
        node-version: 20

    - name: Assume Github OIDC role
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-west-2
        role-to-assume: ${{ vars.DEPLOY_ROLE }}
        role-session-name: MAAP-eoapi-${{ github.event.inputs.deployment_environment }}-deploy

    - name: Install deployment dependencies
      run: | 
        npm install

    - name: Import stacks variables to github output
      id: import-stacks-vars-to-output
      env:
        AUTH_STACK_NAME: ${{ vars.AUTH_STACK_NAME }}
        ROLE_STACK_NAME: ${{ vars.ROLES_STACK_NAME}}
      run: bash .github/workflows/scripts/import_stacks_variables_to_github_output.sh $AUTH_STACK_NAME $ROLE_STACK_NAME

    - name: Run CDK deploy
      env:
        STAGE: "${{ github.event.inputs.deployment_environment }}"
        STAC_API_INTEGRATION_API_ARN: ${{ vars.STAC_API_INTEGRATION_API_ARN }}
        JWKS_URL: ${{ steps.import-stacks-vars-to-output.outputs.JWKS_URL }}
        DATA_ACCESS_ROLE_ARN: ${{ steps.import-stacks-vars-to-output.outputs.DATA_ACCESS_ROLE_ARN }}
        DB_ALLOCATED_STORAGE: ${{ vars.DB_ALLOCATED_STORAGE }}
        DB_INSTANCE_TYPE: ${{ vars.DB_INSTANCE_TYPE }}
        GIT_REPOSITORY: ${{ github.repository}}
        COMMIT_SHA: ${{ github.sha }}
        AUTHOR: ${{ github.actor }}
        CERTIFICATE_ARN: ${{ vars.CERTIFICATE_ARN }}
        INGESTOR_DOMAIN_NAME: ${{ vars.INGESTOR_DOMAIN_NAME }}
        TITILER_PGSTAC_API_CUSTOM_DOMAIN_NAME: ${{ vars.TITILER_PGSTAC_API_CUSTOM_DOMAIN_NAME }}
        STAC_API_CUSTOM_DOMAIN_NAME: ${{ vars.STAC_API_CUSTOM_DOMAIN_NAME}}
        MOSAIC_HOST: ${{ vars.MOSAIC_HOST }}
        STAC_BROWSER_REPO_TAG: ${{ vars.STAC_BROWSER_REPO_TAG }}
        STAC_BROWSER_CUSTOM_DOMAIN_NAME: ${{ vars.STAC_BROWSER_CUSTOM_DOMAIN_NAME }}
        STAC_BROWSER_CERTIFICATE_ARN: ${{ vars.STAC_BROWSER_CERTIFICATE_ARN }}
        WAF_WEB_ACL_ID: ${{ vars.WAF_WEB_ACL_ID }}
      run: |
        npm install -g aws-cdk
        cdk deploy --all --require-approval never
